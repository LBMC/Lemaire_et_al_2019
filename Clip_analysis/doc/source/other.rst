``metaexon_coverage_ctrl`` and ``launcher_metaexon`` documentation
==================================================================

.. _bedtools: https://bedtools.readthedocs.io/en/latest/content/installation.html
.. _bedGraphToBigWig: http://hgdownload.soe.ucsc.edu/admin/exe/

Description
===========

Those scripts aim to create the suplementary figures of CLIP peaks density in the article of *Lemaire et al* entitled :
**Splicing factors and chromatin organization enhance exon recognition by alleviating constraints generated by gene nucleotide composition bias**

The script ``metaexon_coverage_ctrl`` takes in input:
  1. Argument *input_folder* : A folder containing bed files corresponding to peaks obtained from clip experiments
  2. Argument *folder_exon* : A folder containing list of exons down-regulated by splicing factor. Note that the content of this folder can be produced by ``input_creator.py`` and ``create_cce_file.py`` (the commands to launch to do this are described in *Execution of the program* section)
  3. Argument *exon_bed* : A bed file corresponding to every fasterDB exons.
  4. Argument *chrom_size_file* : A 2 column file containing the length of every human chromosome. The first column contains the name of a chromosome and the second columns contains its size.
  5. Argument *output*: Corresponds to the folder where every output will be stored
  6. Argument *metagene_script* : Corresponds to the script ``metagene_coverage.r`` that will build the metagene figures. This script is located here : ``article_LEMAIRE_scripts/metaplot_profile_and_isochore/src/FarLine_exons_results_summary/src/skipped_exon_list_results_summary/coverage_summary/``

Those 6 inputs are required to create the supplementary figure corresponding to the density of peaks around control exons or around down-regulated exons by the same splicing factor as the one immunoprecipitated in the corresponding clip experiment.

The script ``launcher_metaexon.py`` takes the same inputs as ``metaexon_coverage_ctrl.py`` script. This script allows to create the supplementary figure corresponding to the density of peaks around oAT- and oGC-exons for every clip experiment of interest.
oAT and oGC exons corresponds to exons sharing the same characteristics than AT- and GC-exons respectively :
* oAT-exons must have a GC content lower than 49.3% and flanking introns longer than 691 nucleotides
* oGC-exons must have a GC content greater than 49.3% and at least one flanking intron smaller than 691 nucleotides


.. note::

  The figures described above are found in a new created directory named ``metagene_mean`` contained in the folder given with the output argument.


Prerequisites
-------------

Those programs use ``python 3.5`` with the following modules :
  * subprocess
  * os
  * argparse
  * sqlite3
  * gzip
  * re
  * lazyparser

It was written in Ubuntu 16.04 environment and shoud work on unix system with a bash shell.


  1. You may have to install python 3, if you do click `here <https://www.python.org/downloads/release/python-356/>`_
  2. You have to install lazyparser: ``pip3 install lazyparser``.
  3. You also need to install the bedtools_ and the bedGraphToBigWig_ program. They must be available in you PATH.
  4. The folder `data/` (inside ``Clip_analysis/``) must contains the ``fasterDB_lite.bd`` and the ``sed.db`` files. The creation of those database is explained inside  ``Database_creator`` folder.


Execution of the program
------------------------

To display some help:

.. code::

  python3 src/metaexon_coverage_ctrl.py --help
  python3 src/launcher_metaexon.py --help


Commands executed:

.. code::

  mkdir data/input_oAT-GC/
  # You must have launched the script GC_rich_AT_rich_exon_list/src/figures_2_3_creator/custom_exon_list_creator.py before running the following commands :
  sed "s/\t/_/g" ../GC_rich_AT_rich_exon_list/result/figure_2_3/exon_list/GC_unregulated_exons.txt > data/input_oAT-GC/GC_unregulated_exons.txt
  sed "s/\t/_/g" ../GC_rich_AT_rich_exon_list/result/figure_2_3/exon_list/AT_unregulated_exons.txt > data/input_oAT-GC/AT_unregulated_exons.txt
  mkdir data/input
  python3 src/input_creator.py # create the files containing down-regulated exons by a splicing factor
  python3 src/create_cce_file.py # create a control exon file

  mkdir result/clip_merged
  mkdir result/clip_merged/coverage/
  mkdir result/clip_merged/coverage_extended_GC_AT_exons/


  python3 src/metaexon_coverage_ctrl.py -i data/merged_bed/ -f data/input/ -e data/exon.bed -c data/hg19.ren.chrom.sizes -o result/clip_merged/coverage/ -m ../metaplot_profile_and_isochore/src/FarLine_exons_results_summary/src/skipped_exon_list_results_summary/coverage_summary/metagene_coverage.r --ctrl y &&
  python3 src/coverage_figure_compacter.py -f result/clip_merged/coverage/figure/metagene_mean/ && # resize and merge some figures together
  montage -density 300 -geometry +1+1 -tile 1x8 -compress jpeg result/clip_merged/coverage/figure/metagene_mean/*_recap.pdf result/clip_merged/coverage/figure/metagene_mean/final_figures.pdf # merge every figures created by the previous command

  python3 src/launcher_metaexon.py -i data/merged_bed/ -f data/input_oAT-GC/ -e data/exon.bed -c data/hg19.ren.chrom.sizes -o result/clip_merged/coverage_extended_GC_AT_exons/ -m ../metaplot_profile_and_isochore/src/FarLine_exons_results_summary/src/skipped_exon_list_results_summary/coverage_summary/metagene_coverage.r && python3 src/coverage_figure_compacter.py -f result/clip_merged/coverage_extended_GC_AT_exons/figure/metagene_mean/ && montage -density 300 -geometry +1+1 -tile 1x8 -label %f -compress jpeg result/clip_merged/coverage_extended_GC_AT_exons/figure/metagene_mean/*_recap.pdf result/clip_merged/coverage_extended_GC_AT_exons/figure/metagene_mean/final_figures.pdf
